{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Emmanuel\\\\Documents\\\\SCHOOL PROJECTS\\\\WEB DEVELOPMENT\\\\webdev core projects\\\\REACT PROJECTS\\\\github_finder_app\\\\src\\\\components\\\\context\\\\github\\\\GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS, SET_ERROR_MESSAGE, FETCH_FIRST_30_USERS } from \"../types\";\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n    errorMessage: \"\"\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Get first 30 users\n\n  const fetchFirst30Users = async () => {\n    setLoading();\n\n    try {\n      const response = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(response.data);\n      dispatch({\n        type: FETCH_FIRST_30_USERS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: SET_ERROR_MESSAGE,\n        payload: error.message\n      });\n    }\n  }; // Search Users\n\n\n  const searchUsers = async text => {\n    setLoading();\n\n    try {\n      const response = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(response.data);\n      dispatch({\n        type: SEARCH_USERS,\n        payload: response.data.items\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }; // Clear users from state\n\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  }; //Conditionally render the clear users button\n\n\n  const showOrHideClearButton = () => {\n    return GithubContext.users.length > 0 ? true : false;\n  }; //Get Repos\n  //Set Loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      errorMessage: state.errorMessage,\n      searchUsers,\n      fetchFirst30Users,\n      clearUsers,\n      showOrHideClearButton\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["C:/Users/Emmanuel/Documents/SCHOOL PROJECTS/WEB DEVELOPMENT/webdev core projects/REACT PROJECTS/github_finder_app/src/components/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","SET_ERROR_MESSAGE","FETCH_FIRST_30_USERS","GithubState","props","initialState","users","user","repos","loading","errorMessage","state","dispatch","fetchFirst30Users","setLoading","response","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","type","payload","error","message","searchUsers","text","items","clearUsers","showOrHideClearButton","length","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport GithubContext from \"./githubContext\";\r\nimport GithubReducer from \"./githubReducer\";\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_ERROR_MESSAGE,\r\n  FETCH_FIRST_30_USERS,\r\n} from \"../types\";\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n    errorMessage: \"\",\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  // Get first 30 users\r\n  const fetchFirst30Users = async () => {\r\n    setLoading();\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n      );\r\n      console.log(response.data);\r\n      dispatch({\r\n        type: FETCH_FIRST_30_USERS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: SET_ERROR_MESSAGE,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n      );\r\n      console.log(response.data);\r\n      dispatch({\r\n        type: SEARCH_USERS,\r\n        payload: response.data.items,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  // Clear users from state\r\n  const clearUsers = () => {\r\n    dispatch({ type: CLEAR_USERS });\r\n  };\r\n\r\n  //Conditionally render the clear users button\r\n  const showOrHideClearButton = () => {\r\n    return GithubContext.users.length > 0 ? true : false;\r\n  };\r\n\r\n  //Get Repos\r\n\r\n  //Set Loading\r\n  const setLoading = () => {\r\n    dispatch({ type: SET_LOADING });\r\n  };\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        errorMessage: state.errorMessage,\r\n        searchUsers,\r\n        fetchFirst30Users,\r\n        clearUsers,\r\n        showOrHideClearButton,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n"]},"metadata":{},"sourceType":"module"}