{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emmanuel\\\\Documents\\\\SCHOOL PROJECTS\\\\WEB DEVELOPMENT\\\\VIDEOS\\\\Front-End Development (client side)\\\\JAVASCRIPT\\\\Traversey Media\\\\REACT\\\\REACT FRONT TO BACK (UDEMY COURSE)\\\\github_finder_app\\\\src\\\\components\\\\users\\\\Users.js\";\nimport React from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userGridStyle,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Users;\nUsers.PropTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst userGridStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\"\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/Emmanuel/Documents/SCHOOL PROJECTS/WEB DEVELOPMENT/VIDEOS/Front-End Development (client side)/JAVASCRIPT/Traversey Media/REACT/REACT FRONT TO BACK (UDEMY COURSE)/github_finder_app/src/components/users/Users.js"],"names":["React","UserItem","Spinner","PropTypes","Users","users","loading","userGridStyle","map","user","id","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC,MAAIA,OAAJ,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,KAAK,EAAEC,aAAZ;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF,CAZD;;KAAMN,K;AAcNA,KAAK,CAACD,SAAN,GAAkB;AAChBE,EAAAA,KAAK,EAAEF,SAAS,CAACQ,KAAV,CAAgBC,UADP;AAEhBN,EAAAA,OAAO,EAAEH,SAAS,CAACU,IAAV,CAAeD;AAFR,CAAlB;AAKA,MAAML,aAAa,GAAG;AACpBO,EAAAA,OAAO,EAAE,MADW;AAEpBC,EAAAA,mBAAmB,EAAE,gBAFD;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;AAMA,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Users = ({ users, loading }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userGridStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nUsers.PropTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst userGridStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(3, 1fr)\",\r\n  gridGap: \"1rem\",\r\n};\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}