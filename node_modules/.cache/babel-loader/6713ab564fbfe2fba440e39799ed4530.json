{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Emmanuel\\\\Documents\\\\SCHOOL PROJECTS\\\\WEB DEVELOPMENT\\\\webdev core projects\\\\REACT PROJECTS\\\\github_finder_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Footer from \"./components/layout/Footer\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport User from \"./components/users/User\";\nimport NotFound from \"./components/pages/NotFound\";\nimport GithubState from \"./components/context/github/GithubState\";\nimport GithubContext from \"./components/context/github/githubContext\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessge, setErrorMessge] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n  const githubContext = useContext(GithubContext); //display first 30 github users\n\n  useEffect(() => {// setLoading(true);\n    // const fetchFirst30Users = async () => {\n    //   try {\n    //     const response = await axios.get(\n    //       `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    //     );\n    //     console.log(response.data);\n    //     setUsers(response.data);\n    //     setLoading(false);\n    //   } catch (error) {\n    //     console.log(error);\n    //     setErrorMessge(error.message);\n    //     setLoading(false);\n    //   }\n    // };\n    // githubContext.fetchFirst30Users();\n    // eslint-disable-next-line\n  }, []); // //Search Github users\n  // const searchUsers = async (text) => {\n  //   setLoading(true);\n  //   try {\n  //     const response = await axios.get(\n  //       `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n  //     );\n  //     console.log(response.data);\n  //     setUsers(response.data.items);\n  //     setLoading(false);\n  //     /* if (response.data.items === 0) {\n  //       throw new SyntaxError(\n  //         \"Sorry, but your search did not return any result\"\n  //       );\n  //     } else {\n  //       this.setState({ users: response.data.items, loading: false });\n  //     } */\n  //   } catch (error) {\n  //     console.log(error.message);\n  //   }\n  // };\n  // Get a user\n\n  const getUser = async username => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(response.data);\n      setUser(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(`https://api.github.com/users/${username}/repos?per_page=10&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      console.log(response.data);\n      setRepos(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Clear users from state\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; //Show search validation alert message\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message,\n      type\n    }); //Make the alert go away after 6sec\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 6000);\n  }; //Conditionally render the clear users button\n\n\n  const showOrHideClearButton = () => {\n    return users.length > 0 ? true : false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubState, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  clearUsers: clearUsers,\n                  showOrHideClearButton: showOrHideClearButton(),\n                  showAlert: showAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: getUser,\n                getUserRepos: getUserRepos,\n                repos: repos,\n                loading: loading,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"*\",\n              component: NotFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ys18b+vcuHnUkJhrCrnlDk/gUVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Emmanuel/Documents/SCHOOL PROJECTS/WEB DEVELOPMENT/webdev core projects/REACT PROJECTS/github_finder_app/src/App.js"],"names":["React","Fragment","useState","useEffect","useContext","BrowserRouter","Router","Switch","Route","Navbar","Users","axios","Footer","Search","Alert","About","User","NotFound","GithubState","GithubContext","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","errorMessge","setErrorMessge","alert","setAlert","githubContext","getUser","username","response","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","console","log","data","error","getUserRepos","clearUsers","showAlert","message","type","setTimeout","showOrHideClearButton","length","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Users from \"./components/users/Users\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Search from \"./components/users/Search\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport About from \"./components/pages/About\";\r\nimport User from \"./components/users/User\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport GithubState from \"./components/context/github/GithubState\";\r\nimport GithubContext from \"./components/context/github/githubContext\";\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [repos, setRepos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessge, setErrorMessge] = useState(\"\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  //display first 30 github users\r\n\r\n  useEffect(() => {\r\n    // setLoading(true);\r\n    // const fetchFirst30Users = async () => {\r\n    //   try {\r\n    //     const response = await axios.get(\r\n    //       `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    //     );\r\n    //     console.log(response.data);\r\n    //     setUsers(response.data);\r\n    //     setLoading(false);\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //     setErrorMessge(error.message);\r\n    //     setLoading(false);\r\n    //   }\r\n    // };\r\n    // githubContext.fetchFirst30Users();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // //Search Github users\r\n  // const searchUsers = async (text) => {\r\n  //   setLoading(true);\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n  //     );\r\n  //     console.log(response.data);\r\n  //     setUsers(response.data.items);\r\n  //     setLoading(false);\r\n  //     /* if (response.data.items === 0) {\r\n  //       throw new SyntaxError(\r\n  //         \"Sorry, but your search did not return any result\"\r\n  //       );\r\n  //     } else {\r\n  //       this.setState({ users: response.data.items, loading: false });\r\n  //     } */\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // };\r\n\r\n  // Get a user\r\n  const getUser = async (username) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n      );\r\n      console.log(response.data);\r\n\r\n      setUser(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Get users repos\r\n  const getUserRepos = async (username) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/users/${username}/repos?per_page=10&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n      );\r\n      console.log(response.data);\r\n\r\n      setRepos(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Clear users from state\r\n  const clearUsers = () => {\r\n    setUsers([]);\r\n    setLoading(false);\r\n  };\r\n\r\n  //Show search validation alert message\r\n  const showAlert = (message, type) => {\r\n    setAlert({ message, type });\r\n\r\n    //Make the alert go away after 6sec\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 6000);\r\n  };\r\n\r\n  //Conditionally render the clear users button\r\n  const showOrHideClearButton = () => {\r\n    return users.length > 0 ? true : false;\r\n  };\r\n\r\n  return (\r\n    <GithubState>\r\n      <Router>\r\n        <div className='App'>\r\n          <Navbar />\r\n          <div className='container'>\r\n            <Alert alert={alert} />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/'\r\n                render={(props) => (\r\n                  <Fragment>\r\n                    <Search\r\n                      clearUsers={clearUsers}\r\n                      showOrHideClearButton={showOrHideClearButton()}\r\n                      showAlert={showAlert}\r\n                    />\r\n                    <Users />\r\n                  </Fragment>\r\n                )}\r\n              />\r\n              <Route exact path='/about' component={About} />\r\n              <Route\r\n                exact\r\n                path='/user/:login'\r\n                render={(props) => (\r\n                  <User\r\n                    {...props}\r\n                    getUser={getUser}\r\n                    getUserRepos={getUserRepos}\r\n                    repos={repos}\r\n                    loading={loading}\r\n                    user={user}\r\n                  />\r\n                )}\r\n              />\r\n              <Route exact path='*' component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n          <div>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </GithubState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}