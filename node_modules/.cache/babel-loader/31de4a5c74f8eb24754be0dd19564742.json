{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emmanuel\\\\Documents\\\\SCHOOL PROJECTS\\\\WEB DEVELOPMENT\\\\webdev core projects\\\\REACT PROJECTS\\\\github_finder_app\\\\src\\\\components\\\\users\\\\Users.js\";\nimport React, { Fragment } from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"../layout/Footer\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: userGridStyle,\n        children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n          user: user\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Users;\nUsers.PropTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst userGridStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\"\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/Emmanuel/Documents/SCHOOL PROJECTS/WEB DEVELOPMENT/webdev core projects/REACT PROJECTS/github_finder_app/src/components/users/Users.js"],"names":["React","Fragment","UserItem","Spinner","PropTypes","Footer","Users","users","loading","userGridStyle","map","user","id","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC,MAAIA,OAAJ,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEC,aAAZ;AAAA,kBACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAwB,UAAA,IAAI,EAAEA;AAA9B,WAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACF,CAjBD;;KAAMN,K;AAmBNA,KAAK,CAACF,SAAN,GAAkB;AAChBG,EAAAA,KAAK,EAAEH,SAAS,CAACS,KAAV,CAAgBC,UADP;AAEhBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,IAAV,CAAeD;AAFR,CAAlB;AAKA,MAAML,aAAa,GAAG;AACpBO,EAAAA,OAAO,EAAE,MADW;AAEpBC,EAAAA,mBAAmB,EAAE,gBAFD;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;AAMA,eAAeZ,KAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst Users = ({ users, loading }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <div style={userGridStyle}>\r\n          {users.map((user) => (\r\n            <UserItem key={user.id} user={user} />\r\n          ))}\r\n        </div>\r\n        <div className='container'>\r\n          <Footer />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nUsers.PropTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst userGridStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(3, 1fr)\",\r\n  gridGap: \"1rem\",\r\n};\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}